CREATE OR REPLACE FUNCTION CONTRATAR_PLANO_PET(CPF_TUTOR VARCHAR, NOME_PET VARCHAR, NOME_PLANO_PET VARCHAR)
RETURNS VOID
AS $$
DECLARE
	COD_PET_BUSCADO INT;
	COD_PLANO_PET_BUSCADO INT;
BEGIN
	IF EXISTS (
		SELECT 1
		FROM PET P JOIN TUTOR T
		ON P.COD_TUTOR = T.COD_TUTOR
		WHERE P.NOME ILIKE NOME_PET AND T.CPF = CPF_TUTOR
	) THEN
		COD_PET_BUSCADO := (
			SELECT P.COD_PET
			FROM PET P JOIN TUTOR T
			ON P.COD_TUTOR = T.COD_TUTOR
			WHERE P.NOME ILIKE NOME_PET AND T.CPF = CPF_TUTOR
		);
	ELSE
		RAISE EXCEPTION 'O pet não foi encontrado';
	END IF;

	IF EXISTS (SELECT 1 FROM PLANO_PET WHERE NOME ILIKE NOME_PLANO_PET) THEN
		COD_PLANO_PET_BUSCADO := (SELECT COD_PLANO_PET FROM PLANO_PET WHERE NOME ILIKE NOME_PLANO_PET LIMIT 1);
	ELSE
		RAISE EXCEPTION 'O plano pet não foi encontrado';
	END IF;

	IF EXISTS (
		SELECT 1
		FROM VINCULO V JOIN PLANO_PET P
		ON V.COD_PLANO_PET = P.COD_PLANO_PET
		WHERE V.COD_PET = COD_PET_BUSCADO AND V.STATUS = TRUE AND P.NOME ILIKE NOME_PLANO_PET
	) THEN
		RAISE EXCEPTION 'O plano já foi contratado';
	ELSIF EXISTS (SELECT 1 FROM VINCULO WHERE COD_PET = COD_PET_BUSCADO) THEN
		UPDATE VINCULO
		SET STATUS = FALSE
		WHERE COD_PET = COD_PET_BUSCADO;
	END IF;

	INSERT INTO VINCULO (DT_CONTRATACAO, STATUS, COD_PET, COD_PLANO_PET) 
	VALUES (NOW(), TRUE, COD_PET_BUSCADO, COD_PLANO_PET_BUSCADO);
END;
$$ LANGUAGE PLPGSQL;
