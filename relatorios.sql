
--- RELATORIOS PARA A GEST√ÉO DA CLINICA ---



	---- RELATORIOS PARA O USUARIO ATENDENTE üßë‚Äçüíª

	--- (1) CONTROLE BASICO DE ESTOQUE DE FARMACOS

CREATE OR REPLACE FUNCTION RELATORIO_ESTOQUE_FARMACOS()
RETURNS TABLE (
	NOME_FARMACO VARCHAR,
	QUANTIDADE INT,
	VALIDADE DATE,
	DIAS_RESTANTES_VENC INT,
	STATUS_ESTOQUE TEXT
) AS $$
BEGIN
	RETURN QUERY
	SELECT
		F.NOME AS NOME_FARMACO,
		F.QUANT AS QUANTIDADE,
		F.VALIDADE AS VALIDADE,
		GREATEST((F.VALIDADE - CURRENT_DATE),0) AS DIAS_RESTANTES_VENC,
		CASE
			WHEN F.VALIDADE <= CURRENT_DATE THEN
				'‚ùå Vencido'
			WHEN (F.VALIDADE - CURRENT_DATE) <= 90 AND F.QUANT <= 10 THEN
				'‚ö†Ô∏è Critico: Farmaco proximo do vencimento e com baixo estoque...'
			WHEN (F.VALIDADE - CURRENT_DATE) <= 90 THEN
				'‚ö†Ô∏è Farmaco proximo do vencimento'
			WHEN F.QUANT <= 10 THEN
				'‚ö†Ô∏è Farmaco com baixo estoque...'
			ELSE
				'‚úÖ Em estoque'
				
		 END AS STATUS_ESTOQUE
		
	FROM FARMACO F
	ORDER BY STATUS_ESTOQUE DESC;
	
END;
$$ LANGUAGE PLPGSQL;

	--- (2) RELATORIO DE RECEITA DETALHADA POR SERVICO/ESPECIALIDADE

	--- (3) AGENDA DIARIA DE CONSULTAS E VACINA√áOES (PARAMETROS: INTERVALO DE TEMPO)

	---- RELATORIOS PARA O USUARIO VETERINARIO üë®‚Äç‚öïÔ∏è
	
	--- (1) HISTORICO CLINICO DO PACIENTE (PARAMETROS: NOME DO PET, NOME DO TUTOR)

CREATE OR REPLACE FUNCTION RELATORIO_HISTORICO_PACIENTE(
    P_NOME_PET VARCHAR,
    P_CPF_TUTOR VARCHAR
) RETURNS TABLE (
    TIPO_SERVICO VARCHAR(50),
    DATA DATE,
    HORA TIME,
    NOME_VETERINARIO_RESPONSAVEL VARCHAR(50),
    DIAGNOSTICO TEXT,
    NOME_FARMACO VARCHAR(50),
    NOME_PET_RETORNO VARCHAR(50),
    ESPECIE VARCHAR(50),
    PORTE VARCHAR(50),
    DT_NASCIMENTO DATE
) AS $$
DECLARE
    VAR_COD_PET INT;
BEGIN

	IF P_NOME_PET IS NULL OR P_NOME_PET = '' THEN
		RAISE EXCEPTION '‚ùå Insira o nome do pet.';
	ELSIF P_CPF_TUTOR IS NULL OR P_CPF_TUTOR = '' THEN
		RAISE EXCEPTION '‚ùå Insira o CPF do tutor.';
	END IF;
	
    VAR_COD_PET := BUSCAR_COD_PET(P_CPF_TUTOR, P_NOME_PET);

    RETURN QUERY
    SELECT
        'üßë‚Äç‚öïÔ∏èConsulta'::VARCHAR(50) AS TIPO_SERVICO,
        C.DATA,
        C.HORA,
        V.NOME AS NOME_VETERINARIO_RESPONSAVEL,
        C.DIAGNOSTICO,
        COALESCE(F.NOME, 'Nenhum f√°rmaco') AS NOME_FARMACO,
        P.NOME AS NOME_PET_RETORNO,
        P.ESPECIE,
        P.PORTE,
        P.DT_NASC
    FROM CONSULTA C
        LEFT JOIN MEDICACAO M ON C.COD_MEDICACAO = M.COD_MEDICACAO
        LEFT JOIN FARMACO F ON M.COD_FARM = F.COD_FARM
        JOIN VETERINARIO V ON C.COD_VET = V.COD_VET
        JOIN VINCULO VI ON VI.COD_VINCULO = C.COD_VINCULO
        JOIN PET P ON P.COD_PET = VI.COD_PET
    WHERE P.COD_PET = VAR_COD_PET

    UNION ALL

    SELECT
        'üíâVacina√ß√£o'::VARCHAR(50) AS TIPO_SERVICO,
        VAC.DATA,
        VAC.HORA,
        VET.NOME AS NOME_VETERINARIO_RESPONSAVEL,
        'Aplica√ß√£o de vacina'::VARCHAR(50) AS DIAGNOSTICO,
        COALESCE(F.NOME, 'Nenhum f√°rmaco') AS NOME_FARMACO,
        P.NOME AS NOME_PET_RETORNO,
        P.ESPECIE,
        P.PORTE,
        P.DT_NASC
    FROM VACINACAO VAC
        JOIN VINCULO VI ON VAC.COD_VINCULO = VI.COD_VINCULO
        JOIN PET P ON VI.COD_PET = P.COD_PET
        JOIN VETERINARIO VET ON VAC.COD_VET = VET.COD_VET
        JOIN FARMACO F ON VAC.COD_FARM = F.COD_FARM
    WHERE P.COD_PET = VAR_COD_PET;

END;
$$ LANGUAGE PLPGSQL;

-- TESTE
SELECT * FROM RELATORIO_HISTORICO_PACIENTE(
    'THOR',
   	'12345678901'
)

	--- (2) QUANTIDADE DE CONSULTAS E VACINA√áOES REALIZADAS DENTRO DE UM INTERVALO DE TEMPO (PARAMETROS: CRMV, INICIO DA DATA, FIM DA DATA)

CREATE OR REPLACE FUNCTION RELATORIO_CONS_VAC_REALIZADAS(
	P_CRMV VARCHAR(15),
	P_PERIODO_INICIO TEXT,
	P_PERIODO_FINAL TEXT
)
RETURNS TABLE (
	TIPO_SERVICO TEXT,
	NOME_VETERINARIO VARCHAR(50),
	QUANTIDADE_REALIZADA BIGINT,
	FATURAMENTO FLOAT,
	TICKET_MEDIO FLOAT,
	PERIODO_ANALISADO TEXT
) AS $$
DECLARE
	VAR_COD_VET INT;
	VAR_PERIODO_INICIO DATE;
	VAR_PERIODO_FINAL DATE;
BEGIN

	IF P_CRMV IS NULL OR P_CRMV = '' THEN
		RAISE EXCEPTION '‚ùå Insira o CRMV.';
	END IF;
	
	IF P_PERIODO_INICIO IS NULL OR P_PERIODO_INICIO = '' THEN
		RAISE EXCEPTION '‚ùå Insira a data de inicio.';
	END IF;

	BEGIN
		VAR_PERIODO_INICIO := TO_DATE(P_PERIODO_INICIO, 'YYYY-MM-DD');
	EXCEPTION WHEN OTHERS THEN
		RAISE EXCEPTION '‚ùå Formato de data de inicio invalido. Use o formato AAAA-MM-DD.';
	END;
	
	IF P_PERIODO_FINAL IS NULL OR P_PERIODO_FINAL = '' THEN
		RAISE EXCEPTION '‚ùå Insira a data final.';
	END IF;

	BEGIN
		VAR_PERIODO_FINAL := TO_DATE(P_PERIODO_FINAL, 'YYYY-MM-DD');
	EXCEPTION WHEN OTHERS THEN
		RAISE EXCEPTION '‚ùå Formato de data final invalido. Use o formato AAAA-MM-DD.';
	END;
	
	IF VAR_PERIODO_INICIO > VAR_PERIODO_FINAL THEN
		RAISE EXCEPTION '‚ùå Insira a data de inicio MENOR que a data final.';
	END IF;
	
	VAR_COD_VET := BUSCAR_COD_VET(P_CRMV);

	RETURN QUERY

	WITH SERVICOS_REALIZADOS AS (
		SELECT
    	'üßë‚Äç‚öïÔ∏èConsulta' AS TIPO,
    	C.COD_VET,
    	P.VALOR_TOTAL AS VALOR
		FROM CONSULTA C
			JOIN PAGAMENTO P ON C.COD_PAG = P.COD_PAG
		WHERE C.COD_VET = VAR_COD_VET AND C.DATA BETWEEN VAR_PERIODO_INICIO AND VAR_PERIODO_FINAL
		
		UNION ALL
		
		SELECT
		    'üíâVacinacao' AS TIPO,
			VAC.COD_VET,
		    P.VALOR_TOTAL AS VALOR
		FROM VACINACAO VAC
			JOIN PAGAMENTO P ON VAC.COD_PAG = P.COD_PAG
		WHERE VAC.COD_VET = VAR_COD_VET AND VAC.DATA BETWEEN VAR_PERIODO_INICIO AND VAR_PERIODO_FINAL	
	)

	SELECT
		S.TIPO AS TIPO_SERVICO,
		V.NOME AS NOME_VETERINARIO,
		COUNT(*) AS QUANTIDADE_REALIZADA,
		SUM(S.VALOR) AS FATURAMENTO,
		SUM(S.VALOR) / COUNT(*) AS TICKET_MEDIO,
		TO_CHAR(VAR_PERIODO_INICIO, 'DD/MM/YYYY') || ' a ' || TO_CHAR(VAR_PERIODO_FINAL, 'DD/MM/YYYY') AS PERIODO_ANALISADO
		
	FROM SERVICOS_REALIZADOS S
		JOIN VETERINARIO V ON V.COD_VET = S.COD_VET
	GROUP BY S.TIPO, V.NOME;
	
END;
$$ LANGUAGE PLPGSQL;

-- TESTE
SELECT * FROM RELATORIO_CONS_VAC_REALIZADAS('CRMV-PI 1234','2025-06-30','2025-08-30')
	---- RELATORIOS PARA O USUARIO TUTOR üê∂

	--- (1) HISTORICO DE CONSULTAS/VACINACAO DE UM PET ESPECIFICO(PARAMETROS: NOME TUTOR, CPF, NOME PET, TIPO DE RELATORIO(VACINACAO/CONSULTA))
	--- (2) HISTORICO FINANCEIRO/TOTAL GASTO POR VACINACAO E CONSULTA(PARAMETROS: NOME TUTOR, CPF)

