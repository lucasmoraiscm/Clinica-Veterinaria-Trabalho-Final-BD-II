
----- FUNÇÕES GENERICAS (INSERT, UPDATE E DELETE) -----

CREATE OR REPLACE FUNCTION INSERIR_DADOS(
    NOME_TABELA TEXT,
    VALOR1 TEXT DEFAULT NULL,
    VALOR2 TEXT DEFAULT NULL,
    VALOR3 TEXT DEFAULT NULL,
    VALOR4 TEXT DEFAULT NULL,
    VALOR5 TEXT DEFAULT NULL,
    VALOR6 TEXT DEFAULT NULL,
    VALOR7 TEXT DEFAULT NULL,
    VALOR8 TEXT DEFAULT NULL,
    VALOR9 TEXT DEFAULT NULL
)
RETURNS VOID AS $$
BEGIN
    
    IF NOME_TABELA ILIKE 'TUTOR' THEN
        INSERT INTO TUTOR (NOME, CPF, DT_NASC, FONE)
        VALUES (VALOR1, VALOR2, CAST(VALOR3 AS DATE), VALOR4);
        RAISE NOTICE 'Tutor inserido com sucesso.';

    ELSIF NOME_TABELA ILIKE 'PLANO_PET' THEN
        INSERT INTO PLANO_PET (NOME, VALOR, DESCONTO_CONSULTA, DESCONTO_VACINACAO)
        VALUES (VALOR1, CAST(VALOR2 AS FLOAT), CAST(VALOR3 AS FLOAT), CAST(VALOR4 AS FLOAT));
        RAISE NOTICE 'Plano Pet inserido com sucesso.';

    ELSIF NOME_TABELA ILIKE 'PET' THEN
        INSERT INTO PET (NOME, DT_NASC, ESPECIE, PORTE, COD_TUTOR)
        VALUES (VALOR1, CAST(VALOR2 AS DATE), VALOR3, VALOR4, CAST(VALOR5 AS INT));
        RAISE NOTICE 'Pet inserido com sucesso.';


	ELSIF NOME_TABELA ILIKE 'VINCULO' THEN
        INSERT INTO VINCULO (DT_CONTRATACAO, STATUS, COD_PET, COD_PLANO_PET)
        VALUES (CAST(VALOR1 AS DATE), CAST(VALOR2 AS BOOLEAN), CAST(VALOR3 AS INT), CAST(VALOR4 AS INT));
        RAISE NOTICE 'Vínculo inserido com sucesso.';


    ELSIF NOME_TABELA ILIKE 'ESPECIALIDADE' THEN
        INSERT INTO ESPECIALIDADE (NOME, DESCR, VALOR)
        VALUES (VALOR1, VALOR2, CAST(VALOR3 AS FLOAT));
        RAISE NOTICE 'Especialidade inserida com sucesso.';

    
    ELSIF NOME_TABELA ILIKE 'VETERINARIO' THEN
        INSERT INTO VETERINARIO (NOME, CRMV, COD_ESP)
        VALUES (VALOR1, VALOR2, CAST(VALOR3 AS INT));
        RAISE NOTICE 'Veterinário inserido com sucesso.';

   
    ELSIF NOME_TABELA ILIKE 'ATENDENTE' THEN
        INSERT INTO ATENDENTE (NOME, DT_NASC, SALARIO)
        VALUES (VALOR1, CAST(VALOR2 AS DATE), CAST(VALOR3 AS FLOAT));
        RAISE NOTICE 'Atendente inserido com sucesso.';

    
    ELSIF NOME_TABELA ILIKE 'PAGAMENTO' THEN
        INSERT INTO PAGAMENTO (FORMA_PAG,VALOR_TOTAL,QUANT_PARCELAS,DATA)
        VALUES (VALOR1,CAST(VALOR2 AS FLOAT),CAST(VALOR3 AS INT),CAST(VALOR4 AS DATE));
        RAISE NOTICE 'Forma de pagamento inserida com sucesso.';

    
    ELSIF NOME_TABELA ILIKE 'PARCELA' THEN
        INSERT INTO PARCELA (VENC, VALOR, STATUS, COD_PAG)
        VALUES (CAST(VALOR1 AS DATE), CAST(VALOR2 AS FLOAT), CAST(VALOR3 AS BOOLEAN), CAST(VALOR4 AS INT));
        RAISE NOTICE 'Parcela inserida com sucesso.';

   
    ELSIF NOME_TABELA ILIKE 'CONSULTA' THEN
        INSERT INTO CONSULTA (DATA, HORA, DIAGNOSTICO, COD_VET, COD_VINCULO, COD_ATEND, COD_PAG)
        VALUES (CAST(VALOR1 AS DATE), CAST(VALOR2 AS TIME), VALOR3, CAST(VALOR4 AS INT), CAST(VALOR5 AS INT), CAST(VALOR6 AS INT), CAST(VALOR7 AS INT));
        RAISE NOTICE 'Consulta inserida com sucesso.';

   
    ELSIF NOME_TABELA ILIKE 'VACINACAO' THEN
        INSERT INTO VACINACAO (DATA, HORA, COD_VET, COD_VINCULO, COD_ATEND, COD_PAG)
        VALUES (CAST(VALOR1 AS DATE), CAST(VALOR2 AS TIME), CAST(VALOR3 AS INT), CAST(VALOR4 AS INT), CAST(VALOR5 AS INT), CAST(VALOR6 AS INT));
        RAISE NOTICE 'Vacinação inserida com sucesso.';

  
    ELSIF NOME_TABELA ILIKE 'MEDICACAO' THEN
        INSERT INTO MEDICACAO (DATA, HORA, COD_CONSULTA)
        VALUES (CAST(VALOR1 AS DATE), CAST(VALOR2 AS TIME), CAST(VALOR3 AS INT));
        RAISE NOTICE 'Medicação inserida com sucesso.';

    
    ELSIF NOME_TABELA ILIKE 'TIPO' THEN
        INSERT INTO TIPO (NOME)
        VALUES (VALOR1);
        RAISE NOTICE 'Tipo de fármaco inserido com sucesso.';

    
    ELSIF NOME_TABELA ILIKE 'FARMACO' THEN
        INSERT INTO FARMACO (NOME, DOSE, VALIDADE, LOTE, DT_ENTRADA, VALOR, QUANT, COD_TIPO)
        VALUES (VALOR1,VALOR2, CAST(VALOR3 AS DATE),VALOR4, CAST(VALOR5 AS DATE), CAST(VALOR6 AS FLOAT), CAST(VALOR7 AS INT), CAST(VALOR8 AS INT));
        RAISE NOTICE 'Fármaco inserido com sucesso.';

    ELSE
        RAISE EXCEPTION 'Tabela "%" não reconhecida para inserção.', NOME_TABELA;
    END IF;

EXCEPTION
    WHEN OTHERS THEN
        RAISE EXCEPTION 'Erro ao inserir dados na tabela %: %', NOME_TABELA, SQLERRM;
END;
$$ LANGUAGE PLPGSQL;





CREATE OR REPLACE FUNCTION ATUALIZAR_DADOS(
    NOME_TABELA TEXT,
    COLUNAS_E_VALORES TEXT,
    CONDICAO_CHAVE TEXT
) RETURNS VOID AS $$
DECLARE
    LINHAS_AFETADAS INT;
BEGIN

    IF UPPER(NOME_TABELA) NOT IN (
        'TUTOR', 'PET', 'PLANO_PET', 'VINCULO', 'VETERINARIO',
        'ATENDENTE', 'CONSULTA', 'VACINACAO', 'MEDICACAO',
        'FARMACO', 'TIPO', 'PAGAMENTO', 'PARCELA', 'ESPECIALIDADE'
    ) THEN
        RAISE EXCEPTION '❌ A tabela "%" não existe no sistema...', NOME_TABELA;
    END IF;

    EXECUTE FORMAT('UPDATE %I SET %s WHERE %s', NOME_TABELA, COLUNAS_E_VALORES, CONDICAO_CHAVE);

    GET DIAGNOSTICS LINHAS_AFETADAS = ROW_COUNT;

    IF LINHAS_AFETADAS = 0 THEN
        RAISE NOTICE '⚠️ Nenhum dado foi atualizado na tabela "%" com a condição: %', NOME_TABELA, CONDICAO_CHAVE;
        RAISE NOTICE '⚠️ A condição não foi encontrada ou os valores já estavam atualizados.';
    ELSE
        RAISE NOTICE '✅ % registro(s) atualizado(s) na tabela "%" com a condição: %', LINHAS_AFETADAS, NOME_TABELA, CONDICAO_CHAVE;
    END IF;

EXCEPTION
    WHEN OTHERS THEN
		RAISE NOTICE '⚠️ Insira o nome da tabela, valores a ser atualizados ou a condição corretamente...';
        RAISE EXCEPTION '❌ Erro ao atualizar dados da tabela "%": %', NOME_TABELA, SQLERRM;
END;
$$ LANGUAGE PLPGSQL;





CREATE OR REPLACE FUNCTION DELETAR_DADOS(
	NOME_TABELA TEXT,
	CONDICAO_CHAVE TEXT
) RETURNS VOID AS $$
DECLARE
	LINHAS_AFETADAS INT;
BEGIN
	IF UPPER(NOME_TABELA) NOT IN (
	    'TUTOR', 'PET', 'PLANO_PET', 'VINCULO', 'VETERINARIO',
	    'ATENDENTE', 'CONSULTA', 'VACINACAO', 'MEDICACAO',
	    'FARMACO', 'TIPO', 'PAGAMENTO', 'PARCELA', 'ESPECIALIDADE'
	) THEN
    	RAISE EXCEPTION 'A tabela "%" não existe no sistema. Tente novamente...', NOME_TABELA;
	END IF;
	
	EXECUTE FORMAT('DELETE FROM %I WHERE %s',NOME_TABELA,CONDICAO_CHAVE);

	GET DIAGNOSTICS LINHAS_AFETADAS = ROW_COUNT;

	-- SABER SE HOUVE EXCLUSAO(SE NAO HOUVER, O ERRO PODE ESTAR NA CONDICAO )
	IF LINHAS_AFETADAS = 0 THEN
        RAISE NOTICE '⚠️ Nenhum dado foi excluído da tabela "%" com a condição: %', NOME_TABELA, CONDICAO_CHAVE;
		RAISE NOTICE '⚠️ O dado já foi excluido ou numca existiu...';
    ELSE
        RAISE NOTICE '✅ % registro(s) excluído(s) da tabela "%" com a condição: %', LINHAS_AFETADAS, NOME_TABELA, CONDICAO_CHAVE;
    END IF;
		
EXCEPTION
	WHEN OTHERS THEN
		RAISE NOTICE '⚠️ Insira o nome da tabela ou a condição corretamente...';
		RAISE EXCEPTION '❌ Erro ao deletar dados da tabela "%": %', NOME_TABELA, SQLERRM;
END;
$$ LANGUAGE PLPGSQL;


